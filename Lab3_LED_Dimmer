Please fill in the blanks in the following code. Please see me or use the TI resource explorer along with the data sheet and user manual for for help.

/**********************************
 * ADC Controlled LED
 *
 * Example which controls the LED Brightness via PWM which is varied based on an ADC Reading
 *
 * Author: Russell Trafford
 * Revision: 1.1
 * Last Revision Date: 12OCT22
 *
 * Change Log:
 *  - Changed LED Pin to 6.0 to allow for control by Timer3B module
 *  - Using Pin 1.1 for being connected to Grove Connector Analog Channel 1
 *
 *
 * Pin Map:
 *                MSP430FR2355
//            -----------------
//        /|\|                 |
//         | |                 |
//         --|RST              |
//           |                 |
//       >---|P1.1/A1      P6.0|--> LED Wired to LED 2 through external Wire 6.6
//
 *       ****WARNING****
 *       Please disconnect J11 and connect to Pin 6.0 to the lower part of the jumper
 *
 *       ____
 *      | NC | <-- Keep this Disconnected
 *      |----|
 *      | ** | <-- Connect to this part of J11
 *      |____.|
 *
 *
 * Peripherals Used:
 *      ADC12 - Channel 1 (Pin 1.1)
 *      GPIO - Pin 6.0
 *      TimerB0 - UP Mode, CCR1 for PWM Control, controls Pin 6.0
 */
#include <msp430.h> 
/**
 * main.c
 */
void gpioInit();        // Setup the GPIO Pins for controlling the LEDS through PWM (no input arguments)
void timerInit();       // Setup Timer to control the LEDS (no input arguments)
void adcInit();         // Setup ADC to do single, on demand samples (no input arguments)
int readADCSingle();    // Single Read ADC, no input arguments, returns current ADC reading
void setLEDBrightness(int DutyCycle);   // Takes in a duty cycle from 0-100 and converts it to an appropriate CCR value
#include <msp430.h>
/**
 * main.c
 */
void gpioInit();        // Setup the GPIO Pins for controlling the LEDS through PWM (no input arguments)
void timerInit();       // Setup Timer to control the LEDS (no input arguments)
void adcInit();         // Setup ADC to do single, on demand samples (no input arguments)
int readADCSingle();    // Single Read ADC, no input arguments, returns current ADC reading
//-------------------------------------------------------------------------------------------------------------------------
int main(void)
{
WDTCTL = WDTPW | WDTHOLD; // stop watchdog timer


gpioInit();
adcInit();
timerInit();
while(1){
    readADCSingle();
    setLEDBrightness();
}
return 0;
}
//-------------------------------------------------------------------------------------------------------------------------
/**
 * GPIO INIT
 * Initialize all GPIO Pins. Current Pin configuration:
 * Pin 1.0: OUTPUT, GPIO
 * Pin 1.1: INPUT,  ADC Channel 1
 */


void gpioInit(){
    // Configure GPIO Pin
    P6DIR | =BIT0;   //P6.0 set for output
    P6DIR |= BIT0    //

    // Configure ADC Pin
    //Function selector Timer (P6.0)
    P6SEL0 |= BIT0;      // Assign P6.0 as
    P6SEL1 &= ~BIT0;     //

    //ADC function Selector (P1.1)
    P1SEL0 |= BIT1;
    P1SEL1 |= BIT1;
}
//-------------------------------------------------------------------------------------------------------------------------

/**
 * Timer INIT
 * Initialize the Timer Peripheral to control a GPIO Pin with PWM in up mode
 * Timer Mode: Up Mode
 */
void timerInit(){
    // Configure Timer Module to Up Mode**************
    // Configure CCR Registers************************

    TB3CCR0     |= 1000-1 //PWM Time Period / Frequencey (1KHz)
    TB3CCTL1    |= OUTMOD_7; //Reset/set mode 7 for output signal
    TB3CCR1     |= 750-1;     // PWM Duty Cycle is 75%(can change CCR1 to make LED Higher = Brighter Lower=Dimmer)
    TB3CTL      |= TBSSEL_SMCLK |MC_UP|TBCLR     //SMCLK and Up Mdoe
}
//-------------------------------------------------------------------------------------------------------------------------

/**
 * ADC INIT
 * Initialize the ADC Peripheral to read Single measurements on demand.
 * ADC MODE: Single Sample, Single Conversion
 */
void adcInit(){
    ADCCTL0 |= ADCSHT_2 | ADCON;
    ADCCTL1 |= ADCSHP;
    ADCCTRL2 &= ~ACDRES
    ADCCTRL2 |= ACDRES_2;
    ADCMCTL0 |= ADCINCH_1 //P1.1
    ADCIE |= ADCIE0
}
//-------------------------------------------------------------------------------------------------------------------------
/**
 * Read Single ADC Sample from Channel 0 of the ADC12 Peripheral
 * Returns an ADC Sample without interrupts.
 */
int readADCSingle(){
    ADCCTL0 |= ADCENC | ADCSC;      //Sampling & conversion start
    while (!(ADCIFG & ADCIFG0));   // Wait for sample to be sampled and converted
    Return ADCMEM0;
}
//-------------------------------------------------------------------------------------------------------------------------
/**
 * Set LED Brightness on the LED configured from gpioInit. This modifies the
 * CCR register based on the input.
 * int DutyCycle: Value between 0-100
 */

void setLEDBrightness(int DutyCycle){
TB3CCR1 = TBCCR0 * DutyCycle;

}
